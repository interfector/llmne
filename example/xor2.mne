# Payload size: 16 instruction
# Adds 16 to all variable and symbols relocations

BYTE:
0001

GAP:
0024

TEN:
0100

INSTR:
0033
0034
0010
0043

LOOP:

LOAD SHELLCODE

CMP	CARRY
JZ EXIT

DIV TEN
CMP INSTR
JZ OXOR

CMP INSTR+1
JZ OXOR

CMP INSTR+2
JM OXOR

CMP INSTR+3
JG OXOR

LOAD SHELLCODE

SUB	GAP

JMP	NXOR

OXOR:

LOAD SHELLCODE

NXOR:
XOR BYTE
SAVE SHELLCODE

WRITE SHELLCODE

INC LOOP
INC OXOR
INC NXOR+1
INC NXOR+2
INC LOOP+12

JMP LOOP

EXIT:

EXIT 0

SHELLCODE:

3941  # STPUSH PUSHED
3705  # CALL READL
1224  # POP GAP
2769  # JMP CLOOP
3300  # EXIT 0
4201  # SUBSP 1
3403  # DISPLAY CHAR
4012  # STPOP LOOP
1312  # PUSH LOOP
1424  # ADD GAP
1213  # POP LOOP+1
1224  # POP GAP
1083  # READ STRING
1383  # PUSH STRING
2825  # CMP EOT
3019  # JZ END
3512  # INC LOOP
3513  # INC LOOP+1
2712  # JMP LOOP
4102  # ADDSP 1
3400  # DISPLAY INT
1313  # PUSH LOOP+1
1524  # SUB GAP
3838  # RET
0300  # VAR
0010  # VAR
4201  # SUBSP 1
3403  # DISPLAY CHAR
4029  # STPOP PLOOP
1329  # PUSH PLOOP
2837  # CMP NULL
3038  # JZ ENDP
1236  # POP $$+4
1136  # WRITE $$+3
3529  # INC PLOOP
2729  # JMP PLOOP
0000  # NOP
0000  # VAR
4102  # ADDSP 1 
3400  # DISPLAY INT
3838  # RET
1083  # READ STRING
1383  # PUSH STRING
1349  # PUSH GOAL
1345  # PUSH NGOAL
0078  # VAR
0111  # VAR
0116  # VAR
0032  # VAR
0080  # VAR
0097  # VAR
0115  # VAR
0115  # VAR
0101  # VAR
0100  # VAR
0010  # VAR
0000  # VAR
0104  # VAR
0094  # VAR
0093  # VAR
0111  # VAR
0079  # VAR
0101  # VAR
0055  # VAR
0076  # VAR
0035  # VAR
0042  # VAR
0010  # VAR
0000  # VAR
1357  # PUSH PASS
2837  # CMP NULL
3077  # JZ OK
2883  # CMP STRING
2980  # JN NOK
3569  # INC CLOOP
3572  # INC CLOOP+3
2769  # JMP CLOOP
3943  # STPUSH PUSHED+2
3726  # CALL PRINT
3300  # EXIT 0
3944  # STPUSH PUSHED+3
3726  # CALL PRINT
3301  # EXIT 1
0000  # VAR
0000  # VAR
0000  # VAR
0000  # VAR
0000  # VAR
0000  # VAR
0000  # VAR
0000  # VAR
0000  # VAR
0000  # VAR
0000  # VAR
0
0
0
0
0
0


CARRY:
NOP
